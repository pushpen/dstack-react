{"version":3,"file":"index.js","sources":["../src/AccessForbidden/index.js","../src/Avatar/index.js","../src/Spinner/index.js","../src/Button/index.js","../src/CheckboxField/index.js","../src/Copy/index.js","../src/Dropdown/index.js","../src/Loader/index.js","../src/MarkdownRender/index.js","../src/Modal/index.js","../src/hooks/usePrevious.js","../src/ProgressBar/index.js","../src/TextField/index.js","../src/SearchField/index.js","../src/SelectField/index.js","../src/SliderField/index.js","../src/StretchTitleField/index.js","../src/TextAreaField/index.js","../src/Tooltip/index.js","../src/ViewSwitcher/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport image from './lock.svg';\nimport css from './style.module.css';\n\nconst AccessForbidden = ({children}) => {\n    return (\n        <div className={css.forbidden}>\n            <img src={image} alt=\"\" width=\"85\" height=\"104\" />\n\n            {children && (\n                <div className={css.message}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default AccessForbidden;\n","import React, {forwardRef} from 'react';\nimport cx from 'classnames';\nimport css from './styles.module.css';\n\ntype Props = {\n    onClick?: Function,\n    withBorder?: boolean,\n    className?: string,\n    name: string,\n    color?: 'violet' | 'turquoise' | 'blue' | 'lilac' | 'pink' | 'green' | 'green2' | 'orange',\n    size?: 'small' | 'normal' | 'list',\n}\n\nconst Avatar = forwardRef(({className, name, color = 'violet', size = 'normal', withBorder, onClick}: Props, ref) => {\n    return (\n        <div ref={ref} className={cx(css.avatar, className, color, size, {border: withBorder})} onClick={onClick}>\n            {name.slice(0, 2)}\n        </div>\n    );\n});\n\nexport default Avatar;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport css from './styles.module.css';\n\nconst COLORS = {\n    white: '#fff',\n    blue: '#507CD0',\n};\n\ntype Props = {\n    align?: 'center',\n    size?: number,\n    color?: 'white' | 'blue',\n    isShown?: boolean,\n    className?: string,\n};\n\nconst Spinner = ({size = 22, color = 'white', isShown, className, align}: Props) => {\n    return (\n        <div className={cx(css.spinner, className, align, {show: isShown})}>\n            <svg width={size} height={size} viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                {/* eslint-disable */}\n                <path\n                    d=\"M11.7046 18.9689C13.3618 18.8224 14.9321 18.1628 16.1969 17.0821C17.4617 16.0014 18.3581 14.5532 18.7614 12.9392C19.1647 11.3252 19.0548 9.62557 18.4469 8.07695C17.839 6.52832 16.7635 5.20773 15.37 4.29897C13.9765 3.39021 12.3343 2.9385 10.672 3.00671C9.00979 3.07491 7.41015 3.65964 6.09577 4.67951C4.78139 5.69938 3.81766 7.10365 3.33871 8.69687C2.85976 10.2901 2.88943 11.993 3.42358 13.5686L5.19569 12.9678C4.78648 11.7607 4.76375 10.4561 5.13067 9.23556C5.4976 8.01499 6.23591 6.93918 7.24286 6.15785C8.24981 5.37653 9.4753 4.92857 10.7488 4.87632C12.0222 4.82406 13.2803 5.17012 14.3478 5.86632C15.4154 6.56253 16.2394 7.57423 16.7051 8.76064C17.1708 9.94704 17.255 11.2491 16.946 12.4856C16.6371 13.7221 15.9503 14.8316 14.9814 15.6595C14.0124 16.4875 12.8094 16.9927 11.5398 17.105L11.7046 18.9689Z\"\n                    fill=\"url(#paint0_linear)\"\n                />\n                {/* eslint-enable */}\n\n                <defs>\n                    <linearGradient id=\"paint0_linear\" x1=\"13.5\" y1=\"18\" x2=\"4\" y2=\"13\" gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={COLORS[color]} />\n                        <stop offset=\"1\" stopColor={COLORS[color]} stopOpacity=\"0.2\"/>\n                    </linearGradient>\n                </defs>\n            </svg>\n\n        </div>\n    );\n};\n\nexport default Spinner;\n","// @flow\nimport React, {forwardRef} from 'react';\nimport type {Node} from 'react';\nimport cx from 'classnames';\nimport css from './style.module.css';\nimport Spinner from '../Spinner';\n\ntype Props = {\n    Component?: any,\n    children?: Node,\n    className?: string,\n    size?: 'small' | 'normal' | 'large',\n    color?: 'default' | 'primary' | 'secondary' | 'lilac' | 'success' | 'fail',\n    variant?: 'default' | 'contained' | 'outlined',\n    isShowSpinner?: boolean,\n    fullWidth?: boolean,\n    onClick?: Function,\n};\n\nconst Button:Props = forwardRef((\n    {\n        Component = 'button',\n        children,\n        className,\n        size = 'normal',\n        color = 'default',\n        variant = 'default',\n        fullWidth = false,\n        isShowSpinner,\n        ...props\n    },\n\n    ref\n) => {\n    return (\n        <Component\n            ref={ref}\n            className={\n                cx(css.button, size, `color-${color}`, `variant-${variant}`, className, {'full-width': fullWidth})\n            }\n\n            {...props}\n        >\n            {isShowSpinner && <Spinner className={css.spinner} color=\"white\" isShown />}\n            {children}\n        </Component>\n    );\n});\n\nexport default Button;\n","// @flow\n\nimport React from 'react';\nimport cx from 'classnames';\nimport css from './styles.module.css';\n\ntype Props = {\n    className?: string,\n    onChange?: Function,\n    value?: boolean,\n    appearance: 'checkbox' | 'switcher',\n    align: 'left' | 'right',\n    label?: string,\n    onLabel?: string,\n    offLabel?: string,\n    children?: any,\n}\n\nconst CheckboxField = ({\n    className,\n    value,\n    disabled,\n    appearance = 'checkbox',\n    align = 'left',\n    label,\n    onLabel,\n    offLabel,\n    children,\n    ...props\n}: Props) => {\n    return (\n        <label className={cx(css.checkbox, className, appearance, align, {disabled})}>\n            <div>\n                <input\n                    type=\"checkbox\"\n                    checked={value}\n                    {...props}\n                />\n\n                {offLabel && <span\n                    className={cx(css['toggle-label'], 'off')}\n                    dangerouslySetInnerHTML={{__html: offLabel}}\n                />}\n\n                <div className={css.wrapper}>\n                    <div className={cx(css.mark, 'mdi', 'mdi-check', {'toggle-color': !(onLabel && offLabel)})} />\n                </div>\n\n                {onLabel && <span\n                    className={cx(css['toggle-label'], 'on')}\n                    dangerouslySetInnerHTML={{__html: onLabel}}\n                />}\n\n                {label && <span className={css.label}>{label}</span>}\n            </div>\n\n            {children}\n        </label>\n    );\n};\n\nexport default CheckboxField;\n","// @flow\n\nimport React, {useState} from 'react';\nimport cx from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport {useTranslation} from 'react-i18next';\nimport css from './styles.module.css';\n\ntype Props = {\n    children?: Function,\n    className?: string,\n    copyText: string,\n    buttonTitle?: string,\n    successMessage?: string,\n};\n\nconst Copy = ({children, className, copyText, successMessage, buttonTitle}: Props) => {\n    const {t} = useTranslation();\n    const [isShowMessage, setIsShowMessage] = useState(false);\n\n    const onCLick = () => {\n        copy(copyText);\n        setIsShowMessage(true);\n        setTimeout(() => setIsShowMessage(false), 3000);\n    };\n\n    return <div className={cx(css.copy, className)}>\n        {children\n            ? children({onClick: onCLick})\n            : (\n                <div className={css.button} onClick={onCLick}>\n                    <span className={cx(css.icon, 'mdi mdi-content-copy')} />\n\n                    {buttonTitle\n                        ? buttonTitle\n                        : t('copy')\n                    }\n                </div>\n            )\n        }\n\n        <div className={cx(css.message, {'is-show': isShowMessage})}>\n            {successMessage\n                ? successMessage\n                : t('copied')\n            }\n        </div>\n    </div>;\n};\n\nexport default Copy;\n","// @flow\nimport React, {useState, useEffect, useRef} from 'react';\nimport cx from 'classnames';\nimport RcTooltip from 'rc-tooltip';\nimport css from './styles.module.css';\n\ntype Item = {\n    title: string,\n    onClick?: Function,\n}\n\ntype Props = {\n    children?: Function,\n    className?: string,\n    buttonClassName?: string,\n    items: Array<Item>\n}\n\nconst Dropdown = ({className, buttonClassName, children, items}: Props) => {\n    const [isShow, setIsShow] = useState(false);\n    const buttonRef = useRef(null);\n    const dropdownRef = useRef(null);\n\n    useEffect(() => {\n        document.body.addEventListener('click', outlineClickHandle);\n        return () => document.body.removeEventListener('click', outlineClickHandle);\n    });\n\n    const outlineClickHandle = (event: SyntheticEvent<HTMLBodyElement>) => {\n        let targetElement = event.target;\n\n        do {\n            if (targetElement === buttonRef.current || targetElement === dropdownRef.current)\n                return;\n\n            targetElement = targetElement.parentNode;\n        } while (targetElement);\n\n        if (isShow)\n            setIsShow(false);\n    };\n\n    const onCLickButton = (event: SyntheticEvent<HTMLButtonElement>) => {\n        clickStopPropagation(event);\n        setIsShow(!isShow);\n    };\n\n    const clickStopPropagation = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    const onCLickItem = (item: Item) => () => {\n        setIsShow(!isShow);\n\n        if (item.onClick)\n            item.onClick();\n    };\n\n    return (\n        <div className={cx(css.dropdown, className, {active: isShow})}>\n            <RcTooltip\n                arrowContent={null}\n                visible={isShow}\n                placement=\"bottomRight\"\n                destroyTooltipOnHide\n                align={{offset: [0, 0]}}\n\n                overlay={\n                    <div\n                        className={cx(css.menu, 'show')}\n                        ref={dropdownRef}\n                        onClick={clickStopPropagation}\n                    >\n                        {items.map((i, index) => <div\n                            key={index}\n                            className={css.item}\n                            onClick={onCLickItem(i)}\n                        >\n                            {i.title}\n                        </div>)}\n                    </div>\n                }\n            >\n                {children\n                    ? React.cloneElement(children, {\n                        onClick: onCLickButton,\n                        ref: buttonRef,\n                    })\n                    : <div ref={buttonRef} className={cx(css.button, buttonClassName)} onClick={onCLickButton}>\n                        <span className=\"mdi mdi-dots-vertical\" />\n                    </div>\n                }\n            </RcTooltip>\n        </div>\n    );\n};\n\nexport default Dropdown;\n","// @flow\n\nimport React from 'react';\nimport css from './styles.module.css';\n\ntype Props = {}\n\nconst Loader = ({}: Props) => {\n    return (\n        <div className={css.loader}>\n            <div className={css.text} />\n\n            <div className={css.grid}>\n                <div className={css.item}>\n                    <div className={css.pic} />\n                    <div className={css.section} />\n                </div>\n\n                <div className={css.item}>\n                    <div className={css.pic} />\n                    <div className={css.section} />\n                </div>\n\n                <div className={css.item}>\n                    <div className={css.pic} />\n                    <div className={css.section} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","// @flow\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport MathJax from 'react-mathjax';\nimport RemarkMathPlugin from 'remark-math';\n\nconst MarkdownRender = props => {\n    const newProps = {\n        ...props,\n        plugins: [\n            RemarkMathPlugin,\n        ],\n\n        renderers: {\n            ...props.renderers,\n            math: props =>\n                <MathJax.Node formula={props.value} />,\n            inlineMath: props =>\n                <MathJax.Node inline formula={props.value} />,\n        },\n    };\n\n    return (\n        <MathJax.Provider input=\"tex\">\n            <ReactMarkdown {...newProps} />\n        </MathJax.Provider>\n    );\n};\n\nexport default MarkdownRender;","// @flow\n\nimport React from 'react';\nimport type {Node} from 'react';\nimport {Portal} from 'react-portal';\nimport cx from 'classnames';\nimport css from './styles.module.css';\n\ntype Props = {\n    title?: string,\n    isShow?: boolean,\n    className?: string,\n    dialogClassName?: string,\n    size?: 'confirmation' | 'small' | 'big',\n    onClose: Function,\n    children?: Node,\n    withCloseButton?: boolean,\n};\n\nconst Modal = ({\n    title,\n    className,\n    dialogClassName,\n    size = 'big',\n    onClose,\n    isShow,\n    children,\n    withCloseButton,\n}: Props) => {\n    const onClickByLayer = event => {\n        if (event.currentTarget === event.target && onClose)\n            onClose();\n    };\n\n    return (\n        <Portal>\n            <div className={cx(css.modal, className, {show: isShow})} onClick={onClickByLayer}>\n                <div className={cx(css.dialog, size, dialogClassName)}>\n                    {withCloseButton && <span className={cx(css.close, 'mdi mdi-close')} onClick={onClose} />}\n\n                    {title && <div className={css.title}>{title}</div>}\n                    {children}\n                </div>\n            </div>\n        </Portal>\n    );\n};\n\nexport default Modal;\n","import {useEffect, useRef} from 'react';\n\nexport default value => {\n    const ref = useRef(value);\n\n    useEffect(() => {\n        ref.current = value;\n    }, [value]);\n\n    return ref.current;\n};\n","// @flow\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport cx from 'classnames';\nimport {usePrevious} from '../hooks';\nimport css from './styles.module.css';\n\ntype Props = {\n    className?: string,\n    isActive: ?boolean,\n}\n\nconst ProgressBar = ({className, isActive, progress: globalProgress}: Props) => {\n    const [progress, setProgress] = useState(0);\n    const [width, setWidth] = useState(1000);\n    const prevIsActive = usePrevious(isActive);\n    const step = useRef(0.01);\n    const currentProgress = useRef(0);\n    const requestFrame = useRef(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        if (isActive) {\n            setProgress(0);\n            step.current = 0.01;\n            currentProgress.current = 0;\n            startCalculateProgress();\n        }\n\n        if (prevIsActive === true && isActive === false) {\n            if (requestFrame.current)\n                cancelAnimationFrame(requestFrame.current);\n\n            setProgress(100);\n            setTimeout(() => setProgress(0), 800);\n        }\n\n        if (isActive === null) {\n            if (requestFrame.current)\n                cancelAnimationFrame(requestFrame.current);\n\n            setProgress(0);\n        }\n    }, [isActive]);\n\n    useEffect(() => {\n        if (globalProgress !== null)\n            setProgress(globalProgress);\n        else {\n            setProgress(0);\n        }\n    }, [globalProgress]);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n\n        if (ref.current)\n            setWidth(ref.current.offsetWidth);\n\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    const startCalculateProgress = () => {\n        requestAnimationFrame(calculateProgress);\n    };\n\n    const calculateProgress = useCallback(() => {\n        currentProgress.current += step.current;\n        const progress = Math.round(Math.atan(currentProgress.current) / (Math.PI / 2) * 100 * 1000) / 1000;\n\n        setProgress(progress);\n\n        if (progress > 70)\n            step.current = 0.005;\n\n        if (progress >= 100)\n            cancelAnimationFrame(requestFrame.current);\n\n        requestFrame.current = requestAnimationFrame(calculateProgress);\n    }, [isActive]);\n\n    const onResize = () => {\n        if (ref.current)\n            setWidth(ref.current.offsetWidth);\n    };\n\n    return (\n        <div ref={ref} className={cx(css.bar, className)}>\n            <div\n                className={css.progress}\n                style={{\n                    width: `${progress}%`,\n                    backgroundSize: `${width}px 5px`,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ProgressBar;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport css from './styles.module.css';\n\ntype Props = {\n    size?: 'normal' | 'middle' | 'small',\n    label?: string,\n    className?: string,\n    errors?: Array<string>,\n}\n\nconst TextField = ({label, className, size = 'normal', errors = [], ...props}: Props) => {\n    const hasErrors = Boolean(errors.length);\n\n    return (\n        <div className={cx(css.field, className, size, {disabled: props.disabled})}>\n            <label>\n                {label && <div className={css.label}>{label}</div>}\n\n                <div className={css.input}>\n                    {/*$FlowFixMe*/}\n                    <input\n                        className={cx({error: hasErrors})}\n                        {...props}\n                    />\n                </div>\n\n                {hasErrors && <div className={css.error}>{errors.join(', ')}</div>}\n            </label>\n        </div>\n    );\n};\n\nexport default TextField;\n","// @flow\n\nimport React, {useState} from 'react';\nimport cx from 'classnames';\nimport TextField from '../TextField';\nimport css from './styles.module.css';\n\ntype Props = {\n    className?: string,\n    showEverything?: boolean,\n    isDark?: boolean,\n}\n\nconst SearchField = ({className, showEverything, isDark, ...props}: Props) => {\n    const [isShow, setIsShow] = useState(showEverything || (props.value && props.value.length));\n\n    const clear = () => {\n        if (props.onChange)\n            props.onChange('');\n\n        if (!showEverything)\n            setIsShow(false);\n    };\n\n    const onChangeHandle = (event:SyntheticEvent<HTMLInputElement>) => {\n        if (props.onChange)\n            props.onChange(event.target.value);\n    };\n\n    return (\n        <div className={cx(css.search, className, {'is-dark': isDark})}>\n            {isShow && <TextField\n                {...props}\n                onChange={onChangeHandle}\n                className={css.field}\n            />}\n\n            {isShow && Boolean(props.value && props.value.length) && (\n                <div className={css.clear} onClick={clear}>\n                    <span className=\"mdi mdi-close\" />\n                </div>\n            )}\n\n            {isShow && !Boolean(props.value && props.value.length) && (\n                <div className={css.clear}>\n                    <span className=\"mdi mdi-magnify\" />\n                </div>\n            )}\n\n            {!isShow && <div className={css.button} onClick={() => setIsShow(true)}>\n                <span className=\"mdi mdi-magnify\" />\n            </div>}\n        </div>\n    );\n};\n\nexport default SearchField;\n","// @flow\n\nimport React from 'react';\nimport cx from 'classnames';\nimport Select, {Option, OptGroup} from 'rc-select';\nimport CheckboxField from '../CheckboxField';\nimport css from './styles.module.css';\nimport './test.css';\n\nconst allValue = 'all';\n\ntype Props = {\n    className?: string,\n    disabled?: boolean,\n    placeholder?: string,\n    showSearch?: boolean,\n    value: Array<string>,\n    mode?: string,\n    align: 'left' | 'right' | 'bottom',\n    label?: string,\n\n    options: Array<{\n        value: string,\n        label: string,\n    }>,\n}\n\nconst SelectField = ({\n    align = 'left',\n    label,\n    disabled,\n    placeholder,\n    value: propValue = [],\n    className,\n    mode,\n    onChange,\n    options = [],\n    showSearch = true,\n    ...props\n}: Props) => {\n    const onChangeHandle = (value: Array<string>) => {\n        if (value.indexOf(allValue) >= 0)\n            if (value.length > options.length)\n                value = [];\n            else\n                value = options.map(o => o.value);\n\n        if (onChange)\n            onChange(value);\n    };\n\n    const onSelect = () => {};\n\n    const onDeselect = () => {};\n\n    const renderOptions = () => options.map(({value, label}) => (\n        <Option key={value} value={value}>\n            {mode === 'multiple' && <CheckboxField\n                readOnly\n                className=\"select-field-item-option-checkbox\"\n                value={propValue.indexOf(value) >= 0}\n            />}\n\n            <span className=\"select-field-item-option-label\">{label}</span>\n        </Option>\n    ));\n\n    return (\n        <div className={cx(css.field, className, align, {disabled})}>\n            <Select\n                value={propValue}\n                // animation={useAnim ? 'slide-up' : null}\n                // choiceTransitionName=\"rc-select-selection__choice-zoom\"\n                prefixCls=\"select-field\"\n                multiple={mode === 'multiple'}\n                showArrow\n                showSearch={showSearch}\n                onSelect={onSelect}\n                onDeselect={onDeselect}\n                placeholder={placeholder}\n                onChange={onChangeHandle}\n                inputIcon={<span className=\"mdi mdi-chevron-down\" />}\n                {...props}\n            >\n                {options.length && mode === 'multiple' && <Option key={allValue} value={allValue}>\n                    <CheckboxField\n                        readOnly\n                        className=\"select-field-item-option-checkbox\"\n                        value={propValue.length === options.length}\n                    />\n\n                    <span className=\"select-field-item-option-label\">Select all</span>\n                </Option>}\n\n                {mode === 'multiple'\n                    ? <OptGroup>{renderOptions()}</OptGroup>\n                    : renderOptions()\n                }\n            </Select>\n\n            {label && <label className={css.label}>{label}</label>}\n        </div>\n    );\n};\n\nexport default SelectField;\n","// @flow\n\nimport React from 'react';\nimport cx from 'classnames';\nimport Slider from 'rc-slider';\nimport css from './styles.module.css';\nimport './test.css';\n\ntype Props = {\n    name?: string,\n    label?: string,\n    className?: string,\n    align: 'left' | 'right',\n};\n\nconst CustomHandle = props => {\n    const style = {\n        left: props.offset + '%',\n        transform: 'translateX(-50%)',\n    };\n\n    return (\n        <div className={props.className} key={props.index} style={style} data-value={props.value} />\n    );\n};\n\nconst SliderField = ({className, disabled, label, onChange, name, align = 'left', ...props}: Props) => {\n    const onChangeHandle = value => {\n        if (onChange)\n            onChange({\n                target: {\n                    value,\n                    name,\n                },\n            });\n    };\n\n    return (\n        <div className={cx(css.field, className, align, {disabled})}>\n            <div className={css.slider}>\n                <Slider\n                    onChange={onChangeHandle}\n                    tipFormatter={value => `$${value}`}\n                    handle={CustomHandle}\n                    {...props}\n                />\n            </div>\n\n            {label && <span className={css.label}>{label}</span>}\n        </div>\n    );\n};\n\nexport default SliderField;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport css from './styles.module.css';\n\ntype Props = {\n    className?: string,\n    value?: ?string,\n    placeholder?: string,\n}\n\nconst StretchTitleField = ({\n    value,\n    placeholder = '',\n    className,\n    ...props\n}: Props) => {\n    return (\n        <div className={cx(css.field, className)}>\n            <input\n                type=\"text\"\n                placeholder={placeholder}\n                value={value}\n                {...props}\n            />\n\n            <div className={css.hidden}>\n                {value.length ? value : placeholder}\n            </div>\n        </div>\n    );\n};\n\nexport default StretchTitleField;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport css from './styles.module.css';\n\ntype Props = {\n    size?: 'normal' | 'small',\n    label?: string,\n    className?: string,\n    errors?: Array<string>,\n}\n\nconst TextAreaField = ({label, className, size = 'normal', errors = [], ...props}: Props) => {\n    const hasErrors = Boolean(errors.length);\n\n    return (\n        <div className={cx(css.field, className, size, {disabled: props.disabled})}>\n            <label>\n                {label && <div className={css.label}>{label}</div>}\n\n                <div className={css.textarea}>\n                    {/*$FlowFixMe*/}\n                    <textarea\n                        className={cx({error: hasErrors})}\n                        {...props}\n                    />\n                </div>\n\n                {hasErrors && <div className={css.error}>{errors.join(', ')}</div>}\n            </label>\n        </div>\n    );\n};\n\nexport default TextAreaField;\n","// @flow\nimport React from 'react';\nimport RcTooltip from 'rc-tooltip';\nimport css from './style.module.css';\n\ntype Props = {\n    children: any,\n    overlayContent?: any,\n    arrowContent?: any,\n}\n\nconst Tooltip = ({\n    children,\n    overlayContent,\n    arrowContent = null,\n    placement = 'bottomLeft',\n    trigger = ['hover'],\n    overlayStyle = {'pointer-events': 'none'},\n    ...props\n}: Props) => {\n\n    return (\n        <RcTooltip\n            overlayStyle={overlayStyle}\n            arrowContent={arrowContent}\n            placement={placement}\n            trigger={trigger}\n            overlay={\n                <div className={css.tooltip}>{overlayContent}</div>\n            }\n            {...props}\n        >\n            {children}\n        </RcTooltip>\n    );\n};\n\nexport default Tooltip;\n","// @flow\nimport React, {useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport css from './styles.module.css';\n\ntype Props = {\n    value?: 'grid' | 'list',\n    onChange?: Function,\n    className?: string,\n}\n\nconst ViewSwitcher = ({value = 'grid', onChange, className}: Props) => {\n    const [stateValue, setStateValue] = useState(value);\n\n    useEffect(() => {\n        if (value !== stateValue)\n            setStateValue(value);\n\n    }, [value]);\n\n    const toggleValue = () => {\n        const newValue = stateValue === 'grid' ? 'list' : 'grid';\n\n        setStateValue(newValue);\n\n        if (onChange)\n            onChange(newValue);\n    };\n\n    return (\n        <div\n            className={cx(css.switcher, stateValue, className)}\n            onClick={toggleValue}\n        >\n            <span className=\"mdi mdi-view-grid\" />\n            <span className=\"mdi mdi-view-list\" />\n        </div>\n    );\n};\n\nexport default ViewSwitcher;"],"names":["AccessForbidden","children","React","css","forbidden","image","message","Avatar","forwardRef","ref","className","name","color","size","withBorder","onClick","cx","avatar","border","slice","COLORS","white","blue","Spinner","isShown","align","spinner","show","Button","Component","variant","fullWidth","isShowSpinner","props","button","CheckboxField","value","disabled","appearance","label","onLabel","offLabel","checkbox","__html","wrapper","mark","Copy","copyText","successMessage","buttonTitle","useTranslation","t","useState","isShowMessage","setIsShowMessage","onCLick","copy","setTimeout","icon","Dropdown","buttonClassName","items","isShow","setIsShow","buttonRef","useRef","dropdownRef","useEffect","document","body","addEventListener","outlineClickHandle","removeEventListener","event","targetElement","target","current","parentNode","onCLickButton","clickStopPropagation","stopPropagation","preventDefault","onCLickItem","item","dropdown","active","offset","menu","map","i","index","title","cloneElement","Loader","loader","text","grid","pic","section","MarkdownRender","newProps","plugins","RemarkMathPlugin","renderers","math","inlineMath","Modal","dialogClassName","onClose","withCloseButton","onClickByLayer","currentTarget","Portal","modal","dialog","close","ProgressBar","isActive","globalProgress","progress","setProgress","width","setWidth","prevIsActive","usePrevious","step","currentProgress","requestFrame","startCalculateProgress","cancelAnimationFrame","window","onResize","offsetWidth","requestAnimationFrame","calculateProgress","useCallback","Math","round","atan","PI","bar","backgroundSize","TextField","errors","hasErrors","Boolean","length","field","input","error","join","SearchField","showEverything","isDark","clear","onChange","onChangeHandle","search","allValue","SelectField","placeholder","propValue","mode","options","showSearch","indexOf","o","onSelect","onDeselect","renderOptions","Option","Select","OptGroup","CustomHandle","style","left","transform","SliderField","slider","StretchTitleField","hidden","TextAreaField","textarea","Tooltip","overlayContent","arrowContent","placement","trigger","overlayStyle","tooltip","ViewSwitcher","stateValue","setStateValue","toggleValue","newValue","switcher"],"mappings":"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"}